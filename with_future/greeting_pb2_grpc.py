# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import greeting_pb2 as greeting__pb2


class GreetingStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Hello = channel.unary_unary(
        '/Greeting/Hello',
        request_serializer=greeting__pb2.HelloRequest.SerializeToString,
        response_deserializer=greeting__pb2.Response.FromString,
        )


class GreetingServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Hello(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GreetingServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Hello': grpc.unary_unary_rpc_method_handler(
          servicer.Hello,
          request_deserializer=greeting__pb2.HelloRequest.FromString,
          response_serializer=greeting__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Greeting', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
